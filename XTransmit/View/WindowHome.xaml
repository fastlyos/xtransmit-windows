<Window x:Class="XTransmit.View.WindowHome"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        Title="{StaticResource app_name}">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MaterialDesignTabRadioButton}">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="GroupName" Value="xGroupContentSwitch"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Top -->
        <Grid Grid.Row="0" Margin="0, 8, 0, 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- toolbar item -->
            <ItemsControl x:Name="xItemsControl" Grid.Column="0"
                          ItemsSource="{Binding ContentList}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <RadioButton Content="{Binding Title}"
                                     IsChecked="{Binding IsChecked}" 
                                     Command="{Binding ElementName=xItemsControl, Path=DataContext.CommandSwitchContent}"
                                     CommandParameter="{Binding Title}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

            <!-- transmit control and status -->
            <StackPanel Grid.Column="1" Margin="20, 0, 0, 0" Orientation="Horizontal">
                <ToggleButton Margin="10, 0" VerticalAlignment="Center"
                              IsEnabled="{Binding IsTransmitControllable}"
                              IsChecked="{Binding IsTransmitEnabled, Mode=TwoWay}"/>

                <TextBlock Margin="10, 0" VerticalAlignment="Center"
                           Text="{Binding TransmitStatus, Mode=OneWay}" />
            </StackPanel>

            <!-- running progress -->
            <ProgressBar Grid.Column="2" Margin="5, 0"
                         Style="{StaticResource MaterialDesignCircularProgressBar}"
                         IsIndeterminate="{Binding Path=Progress.IsIndeterminate}"
                         Value="{Binding Path=Progress.Value, Mode=OneWay}" />

            <!-- the "more" menu -->
            <md:PopupBox Grid.Column="3" Margin="5, 0" 
                         PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                <StackPanel>
                    <Button Content="{StaticResource curl_title}" Command="{Binding Path=CommandShowCurl}"/>
                    <Separator/>
                    <Button Content="{StaticResource _setting}" Command="{Binding Path=CommandShowSetting}"/>
                    <Button Content="{StaticResource _about}" Command="{Binding Path=CommandShowAbout}"/>
                    <Separator/>
                    <Button Content="{StaticResource _exit}" Command="{Binding Path=CommandExit}"/>
                </StackPanel>
            </md:PopupBox>
        </Grid>

        <!-- Content -->
        <ContentControl Grid.Row="1" Margin="0"
                        Content="{Binding ContentDisplay}"/>

        <!-- Notify -->
        <md:Snackbar Grid.Row="1"  Panel.ZIndex="2"
                     x:Name="xSnackbarNotify"
                     MessageQueue="{md:MessageQueue}"/>
    </Grid>
</Window>
